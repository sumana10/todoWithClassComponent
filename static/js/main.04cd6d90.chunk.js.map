{"version":3,"sources":["LCO-logo-white.png","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","newItem","list","todoValue","id","Date","now","value","this","setState","updatedlist","filter","item","input","src","logo","width","height","className","alt","type","placeholder","required","onChange","e","updateInput","target","onClick","addItem","disabled","length","map","deleteItem","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAe,MAA0B,2C,eC+G1BA,E,kDAvGd,WAAYC,GAAQ,IAAD,8BAElB,cAAMA,IAEDC,MAAQ,CACZC,QAAS,GACTC,KAAM,IANW,E,2CAWnB,SAAQC,GAEL,GAAkB,KAAdA,EAAkB,CAEpB,IAAMF,EAAU,CAClBG,GAAIC,KAAKC,MACTC,MAAOJ,GAGFD,EAAI,sBAAOM,KAAKR,MAAME,MAAlB,CAAwBD,IAElCO,KAAKC,SAAS,CACbP,OACAD,QAAS,Q,wBAMZ,SAAWG,GAEV,IAEMM,EAFI,YAAOF,KAAKR,MAAME,MAEHS,QAAO,SAACC,GAAD,OAAUA,EAAKR,KAAOA,KAEtDI,KAAKC,SAAS,CACbP,KAAMQ,M,yBAKR,SAAYG,GAEXL,KAAKC,SAAS,CACbR,QAASY,M,oBAKX,WAAU,IAAD,OACR,OACI,qCACH,gCACC,qBAAKC,IAAKC,EAAMC,MAAM,MAAMC,OAAO,MAAMC,UAAU,OAAOC,IAAI,SAC9D,oBAAID,UAAU,YAAd,0BACA,sBAAKA,UAAU,YAAf,UACI,iCAEH,uBACCE,KAAK,OACLF,UAAU,aACVG,YAAY,eACZC,UAAQ,EACRf,MAAOC,KAAKR,MAAMC,QAClBsB,SAAU,SAACC,GAAD,OAAO,EAAKC,YAAYD,EAAEE,OAAOnB,UAE5C,wBACCW,UAAU,UACVS,QAAS,kBAAM,EAAKC,QAAQ,EAAK5B,MAAMC,UACvC4B,UAAWrB,KAAKR,MAAMC,QAAQ6B,OAH/B,yBAQA,qBAAKZ,UAAU,OAAf,SACC,6BACEV,KAAKR,MAAME,KAAK6B,KAAI,SAACnB,GACrB,OACC,+BACEA,EAAKL,MACN,wBACCW,UAAU,MACVS,QAAS,kBAAM,EAAKK,WAAWpB,EAAKR,KAFrC,sBAFQQ,EAAKR,iBAejB,wBACA,iCACA,sF,GApGY6B,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.04cd6d90.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/LCO-logo-white.b9eb8ceb.png\";","import React, { Component } from \"react\";\nimport logo from \"./LCO-logo-white.png\";\nimport \"./App.css\";\n\nclass App extends Component {\n\n  //if we take input from other component then props can only read them\n\n\tconstructor(props) {\n\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tnewItem: \"\",\n\t\t\tlist: [],\n\t\t};\n\n\t}\n\n\taddItem(todoValue) {\n\t\t\n    if (todoValue !== \"\") {\n\t\t\t\n      const newItem = {\n\t\t\t\tid: Date.now(),\n\t\t\t\tvalue: todoValue,\n\t\t\t};\n\n\t\t\tconst list = [...this.state.list, newItem];\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tlist,\n\t\t\t\tnewItem: \"\",\n\t\t\t});\n\n\t\t}\n\t}\n\n\tdeleteItem(id) {\n\n\t\tconst list = [...this.state.list];\n\n\t\tconst updatedlist = list.filter((item) => item.id !== id);\n\n\t\tthis.setState({\n\t\t\tlist: updatedlist,\n\t\t});\n\n\t}\n\n\tupdateInput(input) {\n\n\t\tthis.setState({\n\t\t\tnewItem: input,\n\t\t});\n    \n\t}\n\n\trender() {\n\t\treturn (\n      <>\n\t\t\t<div>\n\t\t\t\t<img src={logo} width=\"100\" height=\"100\" className=\"logo\" alt=\"logo\" />\n\t\t\t\t<h1 className=\"app-title\">LCO ToDo App</h1>\n\t\t\t\t<div className=\"container\">\n        <form>\n\t\t\t\t\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"input-text\"\n\t\t\t\t\t\tplaceholder=\"Write a Todo\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tvalue={this.state.newItem}\n\t\t\t\t\t\tonChange={(e) => this.updateInput(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"add-btn\"\n\t\t\t\t\t\tonClick={() => this.addItem(this.state.newItem)}\n\t\t\t\t\t\tdisabled={!this.state.newItem.length}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd Todo\n\t\t\t\t\t</button>\n          </form>\n\t\t\t\t\t<div className=\"list\">\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{this.state.list.map((item) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<li key={item.id}>\n\t\t\t\t\t\t\t\t\t\t{item.value}\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.deleteItem(item.id)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n      <div></div>\n      <footer>\n      <p> Â© Copyright Sumana. All rights reserved.</p>\n      </footer>\n      </>\n\t\t);\n\t}\n}\n\nexport default App;\n// <input\n//   type=\"checkbox\"\n//   name=\"idDone\"\n//   checked={item.isDone}\n//   onChange={() => {}}\n// />\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}